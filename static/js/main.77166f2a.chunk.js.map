{"version":3,"sources":["logo.svg","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","id","name","email","CardList","robots","CardArray","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","console","log","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","substr","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAAe,I,YCeAA,EAZJ,SAACC,GACX,OACI,sBAAKC,UAAU,mDAAf,UACC,qBAAKC,IAAG,+BAA0BF,EAAMG,GAAhC,cACR,gCACC,6BAAKH,EAAMI,OACX,4BAAIJ,EAAMK,eCiBFC,EAvBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAKZC,EAAUD,EAAOE,KAAI,SAACC,EAAKC,GAC9B,OACO,cAAC,EAAD,CAECR,GAAII,EAAOI,GAAGR,GACdC,KAAMG,EAAOI,GAAGP,KAChBC,MAAOE,EAAOI,GAAGN,OAHZE,EAAOI,GAAGR,OAQxB,OACO,8BACKK,KCNEI,EAbC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACjB,OACO,8BAEE,uBAAOZ,UAAU,mCAChBa,KAAK,SAASC,YAAY,SAC1BC,SAAUH,OCGNI,EATF,SAACjB,GAEb,OADAkB,QAAQC,IAAInB,GAEL,qBAAKoB,MAAO,CAACC,SAAU,SAAUC,OAAQ,oBAAqBC,OAAQ,SAAtE,SACEvB,EAAMwB,YCoBDC,E,kDAtBd,WAAYzB,GACX,IAAD,8BACC,cAAMA,IACD0B,MAAM,CACVC,UAAU,GAHZ,E,qDAOA,SAAkBC,EAAMC,GAEvBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG1B,WAEC,OAAyB,IAAtBG,KAAKJ,MAAMC,SACN,yDAEAG,KAAK9B,MAAMwB,a,GApBOQ,aCiFbC,E,kDAxEb,aACC,IAAD,8BACE,gBAQFC,eAAe,SAACC,GAGd,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAVzC,EAAKZ,MACL,CACEnB,OAAQ,GACR6B,YAAa,IALjB,E,0CAkBA,WAAS,IAAD,OACNG,MAAM,8CACLC,MAAK,SAACC,GAEL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GAAS,EAAKZ,SAAS,CAACxB,OAAQoC,OAMvC,IAAMC,EAAed,KAAKJ,MAAMnB,OAAOsC,QAAO,SAACnC,EAAKC,GAElD,OAAO,EAAKe,MAAMU,YAAYU,gBAAgB,EAAKpB,MAAMnB,OAAOI,GAAGP,KAAK2C,OAAO,EAAE,EAAKrB,MAAMU,YAAYY,QAAQF,iBAKpH,OAoBE,cAnBA,CAmBA,OAAK7C,UAAU,KAAf,UAEE,oBAAIE,GAAG,WAAWF,UAAU,2BAA5B,yBACA,cAAC,EAAD,CAAWY,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU3B,OAAQqC,e,GAlEVZ,aCGHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.77166f2a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\n\r\nconst Card=(props)=>{\r\n\treturn(\r\n\t    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n\t    \t<img src={`https://robohash.org/${props.id}?200x200`}/>\r\n\t    \t<div>\r\n\t    \t\t<h2>{props.name}</h2>\r\n\t    \t\t<p>{props.email}</p>\r\n\t    \t</div>\r\n\t    </div>\r\n\t    );\r\n}\r\n\r\nexport default Card;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList=({robots})=>{\r\n\r\n\t// if(true)\r\n\t//    throw new Error('NOOOOO!');\r\n\t// console.log(robots)\r\n\tlet CardArray=robots.map((user,i)=>{\r\n\t\treturn(\r\n\t\t       <Card \r\n\t\t        key={robots[i].id}\r\n\t\t        id={robots[i].id}\r\n\t\t        name={robots[i].name}\r\n\t\t        email={robots[i].email}\r\n\t\t        />\r\n\t\t    );\r\n\t});\r\n\r\n\treturn(\r\n\t       <div>\r\n\t          \t{CardArray}\r\n\t       </div>\r\n\t    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox=({searchChange})=>{\r\n\treturn(\r\n\t       <div\r\n\t       >\r\n\t       \t\t<input className=\"pa3 ba b--green bg-lightest-blue\"\r\n\t       \t\t type=\"search\" placeholder=\"Search\"\r\n\t       \t\t onChange={searchChange}\r\n\t       \t\t \r\n\t       \t\t />\r\n\t       </div>\r\n\t    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll=(props)=>{\r\n\tconsole.log(props)\r\n\treturn(\r\n\t       <div style={{overflow: 'scroll', border: '5px solid #0D083B', height: '800px'}}>\r\n\t       \t{props.children}\r\n\t       </div>\r\n\t   )\r\n};\r\n\r\nexport default Scroll;","import React,{Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error,info)\r\n\t{\r\n\t\tthis.setState({hasError: true});\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tif(this.state.hasError===true)\r\n\t\t\treturn <h1>Oops. There is an Error</h1>;\r\n\t\telse\r\n\t\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","import logo from '../logo.svg';\r\nimport './App.css';\r\nimport CardList from '../components/CardList';\r\nimport {robots} from '../robots';\r\nimport SearchBox from '../components/SearchBox';\r\nimport React,{Component} from 'react';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from './ErrorBoundary';\r\n\r\nclass App extends Component {\r\n\r\n  constructor()\r\n  {\r\n    super();\r\n    this.state=\r\n    {\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  onSearchChange=(event)=>\r\n  {\r\n   \r\n    this.setState({searchfield: event.target.value}) ;\r\n   // console.log('inside function: ',this.state.searchfield);\r\n    \r\n    \r\n  }\r\n\r\n  render(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then((response)=>{\r\n      \r\n      return response.json();\r\n    })\r\n    .then((users)=>{this.setState({robots: users});\r\n // console.log(`%c%ousers`,\"color: green\",users);\r\n});  \r\n\r\n\r\n\r\n    const filteredRobots=this.state.robots.filter((user,i)=>{\r\n     // console.log('substr',robots[i].name.substr(0,this.state.searchfield.length).toLowerCase(),\"\\nlength\",this.state.searchfield.length);\r\n      return this.state.searchfield.toLowerCase()===this.state.robots[i].name.substr(0,this.state.searchfield.length).toLowerCase();\r\n    })\r\n     // console.log( this.state.searchfield);\r\n\r\n    // console.log(filteredRobots);\r\n  return (\r\n    // <div className=\"App\">\r\n    //   <header className=\"App-header\">\r\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n    //     <p>\r\n    //       Edit <code>src/App.js</code> and save to reload.\r\n    //     </p>\r\n    //     <a\r\n    //       className=\"App-link\"\r\n    //       href=\"https://reactjs.org\"\r\n    //       target=\"_blank\"\r\n    //       rel=\"noopener noreferrer\"\r\n    //     >\r\n    //       Learn React\r\n    //     </a>\r\n    //   </header>\r\n    // </div>\r\n\r\n\r\n\r\n    <div className=\"tc\"\r\n    >\r\n      <h1 id=\"heading1\" className=\"f1 lh-title washed-green\">RoboFriends</h1>\r\n      <SearchBox searchChange={this.onSearchChange} />\r\n      <Scroll>\r\n        <ErrorBoundary>\r\n          <CardList robots={filteredRobots}/>\r\n        </ErrorBoundary>\r\n      </Scroll>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App.js';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport 'tachyons';\r\nimport {robots} from './robots';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  \t\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}